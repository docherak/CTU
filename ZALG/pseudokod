s	// start
c	// cil
a	// pozice agenta
X	// zed
.	// volny prostor

G_cost	// vzdalenost a od s
H_cost	// vzdalenost a od c
F_cost	// G_cost + H_cost 

TOEVAL	// seznam dlazdic k vyhodnoceni
EVALD	// seznam vyhodnocenych dlazdice

kroky:
	
	pridat s dlazdici do TOEVAL

	loop
		aktivni = dlazdice v TOEVAL s nejnizsi F_cost
		odstranit aktivni z TOEVAL
		pridat aktivni do EVALD

	if aktivni == c
		return						// cesta nalezena

	foreach soused of aktivni
		if soused == X nebo soused in EVALD
			skip k dalsimu sousedovi
		if soused not in TOEVAL nebo nova trasa k sousedovi je kratsi nez puvodni
			(pre)nastavit F_cost souseda
			nastavit rodic souseda na aktivni
			if soused not in TOEVAL
				add soused to EVAL
